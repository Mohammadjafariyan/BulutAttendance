package com.bulut.attendance.domain;

import static com.bulut.attendance.domain.AssertUtils.bigDecimalCompareTo;
import static org.assertj.core.api.Assertions.assertThat;

public class WorkItemAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWorkItemAllPropertiesEquals(WorkItem expected, WorkItem actual) {
        assertWorkItemAutoGeneratedPropertiesEquals(expected, actual);
        assertWorkItemAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWorkItemAllUpdatablePropertiesEquals(WorkItem expected, WorkItem actual) {
        assertWorkItemUpdatableFieldsEquals(expected, actual);
        assertWorkItemUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWorkItemAutoGeneratedPropertiesEquals(WorkItem expected, WorkItem actual) {
        assertThat(expected)
            .as("Verify WorkItem auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWorkItemUpdatableFieldsEquals(WorkItem expected, WorkItem actual) {
        assertThat(expected)
            .as("Verify WorkItem relevant properties")
            .satisfies(
                e -> assertThat(e.getAmount()).as("check amount").usingComparator(bigDecimalCompareTo).isEqualTo(actual.getAmount())
            );
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWorkItemUpdatableRelationshipsEquals(WorkItem expected, WorkItem actual) {
        assertThat(expected)
            .as("Verify WorkItem relationships")
            .satisfies(e -> assertThat(e.getHrLetterParameter()).as("check hrLetterParameter").isEqualTo(actual.getHrLetterParameter()))
            .satisfies(e -> assertThat(e.getInternalUser()).as("check internalUser").isEqualTo(actual.getInternalUser()))
            .satisfies(e -> assertThat(e.getCompany()).as("check company").isEqualTo(actual.getCompany()))
            .satisfies(e -> assertThat(e.getWork()).as("check work").isEqualTo(actual.getWork()));
    }
}
