package com.bulut.attendance.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class LeaveSummaryAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLeaveSummaryAllPropertiesEquals(LeaveSummary expected, LeaveSummary actual) {
        assertLeaveSummaryAutoGeneratedPropertiesEquals(expected, actual);
        assertLeaveSummaryAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLeaveSummaryAllUpdatablePropertiesEquals(LeaveSummary expected, LeaveSummary actual) {
        assertLeaveSummaryUpdatableFieldsEquals(expected, actual);
        assertLeaveSummaryUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLeaveSummaryAutoGeneratedPropertiesEquals(LeaveSummary expected, LeaveSummary actual) {
        assertThat(expected)
            .as("Verify LeaveSummary auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLeaveSummaryUpdatableFieldsEquals(LeaveSummary expected, LeaveSummary actual) {
        assertThat(expected)
            .as("Verify LeaveSummary relevant properties")
            .satisfies(e -> assertThat(e.getRemainHours()).as("check remainHours").isEqualTo(actual.getRemainHours()))
            .satisfies(e -> assertThat(e.getRemainDays()).as("check remainDays").isEqualTo(actual.getRemainDays()))
            .satisfies(e -> assertThat(e.getYear()).as("check year").isEqualTo(actual.getYear()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLeaveSummaryUpdatableRelationshipsEquals(LeaveSummary expected, LeaveSummary actual) {
        assertThat(expected)
            .as("Verify LeaveSummary relationships")
            .satisfies(e -> assertThat(e.getStatus()).as("check status").isEqualTo(actual.getStatus()))
            .satisfies(e -> assertThat(e.getInternalUser()).as("check internalUser").isEqualTo(actual.getInternalUser()))
            .satisfies(e -> assertThat(e.getCompany()).as("check company").isEqualTo(actual.getCompany()));
    }
}
