package com.bulut.attendance.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class SysConfigAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSysConfigAllPropertiesEquals(SysConfig expected, SysConfig actual) {
        assertSysConfigAutoGeneratedPropertiesEquals(expected, actual);
        assertSysConfigAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSysConfigAllUpdatablePropertiesEquals(SysConfig expected, SysConfig actual) {
        assertSysConfigUpdatableFieldsEquals(expected, actual);
        assertSysConfigUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSysConfigAutoGeneratedPropertiesEquals(SysConfig expected, SysConfig actual) {
        assertThat(expected)
            .as("Verify SysConfig auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSysConfigUpdatableFieldsEquals(SysConfig expected, SysConfig actual) {
        assertThat(expected)
            .as("Verify SysConfig relevant properties")
            .satisfies(e -> assertThat(e.getTaxFormula()).as("check taxFormula").isEqualTo(actual.getTaxFormula()))
            .satisfies(e -> assertThat(e.getSanavatFormula()).as("check sanavatFormula").isEqualTo(actual.getSanavatFormula()))
            .satisfies(e -> assertThat(e.getYear()).as("check year").isEqualTo(actual.getYear()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSysConfigUpdatableRelationshipsEquals(SysConfig expected, SysConfig actual) {
        assertThat(expected)
            .as("Verify SysConfig relationships")
            .satisfies(e -> assertThat(e.getStatus()).as("check status").isEqualTo(actual.getStatus()))
            .satisfies(e -> assertThat(e.getInternalUser()).as("check internalUser").isEqualTo(actual.getInternalUser()))
            .satisfies(e -> assertThat(e.getCompany()).as("check company").isEqualTo(actual.getCompany()));
    }
}
