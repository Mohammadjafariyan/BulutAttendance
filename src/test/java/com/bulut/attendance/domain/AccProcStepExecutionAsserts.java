package com.bulut.attendance.domain;

import static com.bulut.attendance.domain.AssertUtils.bigDecimalCompareTo;
import static org.assertj.core.api.Assertions.assertThat;

public class AccProcStepExecutionAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAccProcStepExecutionAllPropertiesEquals(AccProcStepExecution expected, AccProcStepExecution actual) {
        assertAccProcStepExecutionAutoGeneratedPropertiesEquals(expected, actual);
        assertAccProcStepExecutionAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAccProcStepExecutionAllUpdatablePropertiesEquals(AccProcStepExecution expected, AccProcStepExecution actual) {
        assertAccProcStepExecutionUpdatableFieldsEquals(expected, actual);
        assertAccProcStepExecutionUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAccProcStepExecutionAutoGeneratedPropertiesEquals(AccProcStepExecution expected, AccProcStepExecution actual) {
        assertThat(expected)
            .as("Verify AccProcStepExecution auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAccProcStepExecutionUpdatableFieldsEquals(AccProcStepExecution expected, AccProcStepExecution actual) {
        assertThat(expected)
            .as("Verify AccProcStepExecution relevant properties")
            .satisfies(
                e ->
                    assertThat(e.getDebitAmount())
                        .as("check debitAmount")
                        .usingComparator(bigDecimalCompareTo)
                        .isEqualTo(actual.getDebitAmount())
            )
            .satisfies(
                e ->
                    assertThat(e.getCreditAmount())
                        .as("check creditAmount")
                        .usingComparator(bigDecimalCompareTo)
                        .isEqualTo(actual.getCreditAmount())
            )
            .satisfies(e -> assertThat(e.getDesc()).as("check desc").isEqualTo(actual.getDesc()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAccProcStepExecutionUpdatableRelationshipsEquals(AccProcStepExecution expected, AccProcStepExecution actual) {
        assertThat(expected)
            .as("Verify AccProcStepExecution relationships")
            .satisfies(e -> assertThat(e.getInternalUser()).as("check internalUser").isEqualTo(actual.getInternalUser()))
            .satisfies(e -> assertThat(e.getCompany()).as("check company").isEqualTo(actual.getCompany()))
            .satisfies(e -> assertThat(e.getCreditAccount()).as("check creditAccount").isEqualTo(actual.getCreditAccount()))
            .satisfies(e -> assertThat(e.getDebitAccount()).as("check debitAccount").isEqualTo(actual.getDebitAccount()))
            .satisfies(e -> assertThat(e.getProcedure()).as("check procedure").isEqualTo(actual.getProcedure()))
            .satisfies(e -> assertThat(e.getStep()).as("check step").isEqualTo(actual.getStep()));
    }
}
