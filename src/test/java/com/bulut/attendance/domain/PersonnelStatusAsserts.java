package com.bulut.attendance.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class PersonnelStatusAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPersonnelStatusAllPropertiesEquals(PersonnelStatus expected, PersonnelStatus actual) {
        assertPersonnelStatusAutoGeneratedPropertiesEquals(expected, actual);
        assertPersonnelStatusAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPersonnelStatusAllUpdatablePropertiesEquals(PersonnelStatus expected, PersonnelStatus actual) {
        assertPersonnelStatusUpdatableFieldsEquals(expected, actual);
        assertPersonnelStatusUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPersonnelStatusAutoGeneratedPropertiesEquals(PersonnelStatus expected, PersonnelStatus actual) {
        assertThat(expected)
            .as("Verify PersonnelStatus auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPersonnelStatusUpdatableFieldsEquals(PersonnelStatus expected, PersonnelStatus actual) {
        assertThat(expected)
            .as("Verify PersonnelStatus relevant properties")
            .satisfies(e -> assertThat(e.getTitle()).as("check title").isEqualTo(actual.getTitle()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPersonnelStatusUpdatableRelationshipsEquals(PersonnelStatus expected, PersonnelStatus actual) {
        assertThat(expected)
            .as("Verify PersonnelStatus relationships")
            .satisfies(e -> assertThat(e.getStatus()).as("check status").isEqualTo(actual.getStatus()))
            .satisfies(e -> assertThat(e.getInternalUser()).as("check internalUser").isEqualTo(actual.getInternalUser()))
            .satisfies(e -> assertThat(e.getCompany()).as("check company").isEqualTo(actual.getCompany()));
    }
}
